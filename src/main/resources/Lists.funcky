prelude: funcky:prelude
# Construct a new list type.
# prelude:function prelude:type prelude:type
# list elementType
# elementType the element type of the list type to construct
# return the list type corresponding to lists containing elements of type elementType 
# list = ...

# Get the element type of a list type.
# prelude:function prelude:type prelude:type
# element listType
# listType the list type whose element type to retrieve
# return the element type of the given list type 
# element = ...

# Empty list.
# list $type
# empty = ...

# Get the head of a list.
# prelude:function (list $type) $type
# head listArgument
# listArgument the list whose head to retrieve
# return the head of the given list 
# head = ...

# Get the tail of a list.
# prelude:function $type (list $type)
# tail listArgument
# listArgument the list whose tail to retrieve
# return the tail of the given list 
# tail = ...

# Prepend an element to a list.
# prelude:function $type (prelude:function (list $type) (list $type))
# prepend elementArgument listArgument
# elementArgument the element to prepend
# listArgument the list to prepend the given argument to
# return a new list having as head the given element and as tail the given list
# prepend = ...
