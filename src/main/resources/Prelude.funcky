# Type of types.
# type
# type = ...

# Bottom function.
# bottom $type1 $type2
# bottom argument
# return never return any value
# bottom = ...

# Identity function.
# function $type $type
# identity argument
# argument the value to return
# return the given argument
# identity = ...

# Compose two functions.
# function (function $type1 $type2) (function (function $type3 $type1) (function $type3 $type2))
# compose function1 function2 argument
# function1 the outer function to compose
# function2 the inner function to compose
# argument the argument to apply the composition to
# return the composition of the given functions applied to the given argument (function1 (function2 argument))
# compose = ...

# Flip the arguments of a function.
# function (function $type1 (function $type2 $type3)) (function $type2 (function $type1 $type3))
# flip function argument1 argument2
# function the function whose arguments to flip
# argument1 the second argument to pass to the function
# argument2 the first argument to pass to the function
# return a new function corresponding to applying the given function to the given arguments in reverse order (function argument2 argument1)
# flip = ... 

# Duplicate the argument of a function.
# function (function $type1 (function $type1 $type2)) $type1 $type2
# duplicate function argument
# function the function whose argument to duplicate
# argument the argument to duplicate
# return a new function corresponding to applying the given function to the given argument and reapplying the resulting function to the same argument (function argument argument)
# duplicate = ...

# Get the type of an expression.
# function $type type
# typeOf argument
# argument the argument whose type to get
# return the type of argument
# typeOf = ...

# Construct a function type.
# function type (function type type)
# function domain range
# domain the function domain type
# range the function range type
# return the function type corresponding to functions from the given domain type to the given range type
# function = ...  

# TODO domain
# TODO range